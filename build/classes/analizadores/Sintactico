/*
 * Ejemplo desarrollado por Erick Navarro
 * Blog: e-navarro.blogspot.com
 * Julio - 2018
 */

package analizadores; 
import java_cup.runtime.*;

parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    } 

     String palabra = "";
    
:} 

terminal String LLAVEABIERTA,LLAVECERRADA, CONJ, LETRA, DOSPUNTOS, GUION, MAYORQUE, PUNTOCOMA, TILDE, NUMERO, MINUSCULA, MAYUSCULA, COMA;
terminal String PUNTO, ASTERISCO, OR,INTERROGACION, MAS , SIMBOLOS, PORCENTAJE,IDENTIFICADOR, COMILLAS, CCOMILLA,CARACTER;

non terminal ini, instrucciones, conjuntos, palabra, notacion, cadena, Xreg, z, caracter;

precedence left OR;
precedence left PUNTO;
precedence left ASTERISCO,INTERROGACION, MAS;


start with ini; 

ini::= instrucciones;

instrucciones ::= 
     LLAVEABIERTA conjuntos Xreg {:System.out.println("ANALISIS  EXITOSO \n *********************************************" );:}
;

conjuntos ::= CONJ DOSPUNTOS IDENTIFICADOR GUION MAYORQUE notacion PUNTOCOMA
              |CONJ DOSPUNTOS IDENTIFICADOR GUION MAYORQUE notacion PUNTOCOMA conjuntos
;


notacion ::=  NUMERO COMA notacion
              |NUMERO
              |LETRA COMA notacion
              |LETRA
              |LETRA TILDE LETRA
              |NUMERO TILDE NUMERO
              |SIMBOLOS TILDE SIMBOLOS
;

Xreg::= IDENTIFICADOR GUION MAYORQUE z:a PUNTOCOMA {: System.out.println(a); :};



z ::=   PUNTO z:a z:b {: String p = "("+a+"."+b+")";
        RESULT = p;
        :}
        | OR z:a z:b {: String p = "("+a+"|"+b+")";
        RESULT = p;
        :}
        | ASTERISCO z:a {: String p = "(" + a+ ")*";
        RESULT = p;
        :}
        | MAS z:a {: String p = "(" + a+ ")+";
        RESULT = p;
        :}
        | INTERROGACION z:a {: String p = "(" + a+ ")?";
        RESULT = p;
        :}
        | CARACTER:id {: String Y = "{"+id+"}";
        RESULT = Y; :}
        |LLAVEABIERTA IDENTIFICADOR:id LLAVECERRADA {: String Y = "{"+id+"}"; 
        RESULT  = Y; :}
;

caracter ::= LETRA:q {: String t = q; 
                      RESULT = q;  :}
             |NUMERO:q {: String t = q; 
                      RESULT = q;  :}
             |SIMBOLOS:q {: String t = q; 
                      RESULT = q;  :}
             |PUNTO

                      
;